{"ast":null,"code":"var _jsxFileName = \"/Users/yuerfei/repo/react-project/todo-list/src/App.js\",\n  _s = $RefreshSig$();\nimport Todo from \"./components/Todo\";\nimport Form from \"./components/Form\";\nimport FilterButton from \"./components/FilterButton\";\nimport { useState } from \"react\";\nimport { nanoid } from \"nanoid\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst FILTER_MAP = {\n  All: () => true,\n  Active: task => !task.completed,\n  Completed: task => task.completed\n};\nconst FILTER_NAME = Object.keys(FILTER_MAP);\n_c = FILTER_NAME;\nfunction App(props) {\n  _s();\n  const [tasks, setTasks] = useState(props.tasks);\n  const [filter, setFilter] = useState(\"All\");\n  function toggleTaskCompleted(id) {\n    const updateTasks = tasks.map(task => {\n      if (id === task.id) {\n        return {\n          ...task,\n          completed: !task.completed\n        };\n      }\n      return task;\n    });\n    setTasks(updateTasks);\n  }\n  function delTask(id) {\n    const remainTasks = tasks.filter(task => id !== task.id);\n    setTasks(remainTasks);\n  }\n  function addTask(name) {\n    const newTask = {\n      id: `todo-${nanoid()}`,\n      name,\n      completed: false\n    };\n    setTasks([...taskList, newTask]);\n  }\n  function editTask(id, newName) {\n    const editedTaskList = tasks.map(task => {\n      if (task.id === id) {\n        return {\n          ...task,\n          name: newName\n        };\n      }\n      return task;\n    });\n    setTasks(editedTaskList);\n  }\n  const taskList = tasks === null || tasks === void 0 ? void 0 : tasks.map(task => /*#__PURE__*/_jsxDEV(Todo, {\n    id: task.id,\n    completed: task.completed,\n    name: task.name,\n    toggleTaskCompleted: toggleTaskCompleted,\n    delTask: delTask,\n    editTask: editTask\n  }, task.id, false, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 3\n  }, this));\n  const taskNano = taskList.length !== 1 ? \"tasks\" : \"task\";\n  const headingText = `${taskList.length} ${taskNano} remaining`;\n  const filterList = FILTER_NAME.map(name => {\n    return /*#__PURE__*/_jsxDEV(FilterButton, {\n      name: name,\n      isPressed: name === filter,\n      setFilter: setFilter\n    }, name, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 10\n    }, this);\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"todoapp stack-large\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Todo-List\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Form, {\n      addTask: addTask\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"filters btn-group stack-exception\",\n      children: filterList\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      id: \"list-heading\",\n      children: headingText\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      role: \"list\",\n      className: \"todo-list stack-large stack-exception\",\n      \"aria-labelledby\": \"list-heading\",\n      children: taskList\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 75,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"XEViG1OucSQptY/dyFJYxL9pby8=\");\n_c2 = App;\nexport default App;\nvar _c, _c2;\n$RefreshReg$(_c, \"FILTER_NAME\");\n$RefreshReg$(_c2, \"App\");","map":{"version":3,"names":["Todo","Form","FilterButton","useState","nanoid","jsxDEV","_jsxDEV","FILTER_MAP","All","Active","task","completed","Completed","FILTER_NAME","Object","keys","_c","App","props","_s","tasks","setTasks","filter","setFilter","toggleTaskCompleted","id","updateTasks","map","delTask","remainTasks","addTask","name","newTask","taskList","editTask","newName","editedTaskList","fileName","_jsxFileName","lineNumber","columnNumber","taskNano","length","headingText","filterList","isPressed","className","children","role","_c2","$RefreshReg$"],"sources":["/Users/yuerfei/repo/react-project/todo-list/src/App.js"],"sourcesContent":["import Todo from \"./components/Todo\";\nimport Form from \"./components/Form\";\nimport FilterButton from \"./components/FilterButton\";\nimport { useState } from \"react\";\nimport { nanoid } from \"nanoid\";\n\nconst FILTER_MAP = {\n\tAll: () => true,\n\tActive: (task) => !task.completed,\n\tCompleted: (task) => task.completed,\n}\nconst FILTER_NAME = Object.keys(FILTER_MAP)\n\nfunction App(props) {\n\tconst [tasks, setTasks] = useState(props.tasks)\n\tconst [filter, setFilter] = useState(\"All\");\n\n\tfunction toggleTaskCompleted(id) {\n\t\tconst updateTasks = tasks.map((task) => {\n\t\t\tif (id === task.id) {\n\t\t\t\treturn {...task, completed: !task.completed}\n\t\t\t}\n\t\t\treturn task\n\t\t})\n\t\tsetTasks(updateTasks)\n\t}\n\n\tfunction delTask(id) {\n\t\tconst remainTasks = tasks.filter((task) => id !== task.id)\n\t\tsetTasks(remainTasks)\n\t}\n\n\tfunction addTask(name) {\n\t\tconst newTask = {id: `todo-${nanoid()}`, name, completed: false}\n\t\tsetTasks([...taskList, newTask])\n\t}\n\n\tfunction editTask(id, newName) {\n\t\tconst editedTaskList = tasks.map((task) => {\n\t\t\tif (task.id === id) {\n\t\t\t\treturn {...task, name: newName}\n\t\t\t}\n\t\t\treturn task\n\t\t})\n\n\t\tsetTasks(editedTaskList)\n\t}\n\n\tconst taskList = tasks?.map((task) => (\n\t\t<Todo \n\t\t\tid={task.id} \n\t\t\tcompleted={task.completed} \n\t\t\tname={task.name}\n\t\t\tkey={task.id}\n\t\t\ttoggleTaskCompleted={toggleTaskCompleted}\n\t\t\tdelTask={delTask}\n\t\t\teditTask={editTask}\n\t\t/>\n\t))\n\n\tconst taskNano = taskList.length !== 1 ? \"tasks\" : \"task\"\n\tconst headingText = `${taskList.length} ${taskNano} remaining`\n\n\tconst filterList = FILTER_NAME.map((name) => {\n\t\t\n\t\treturn\t<FilterButton \n\t\t\tkey={name}\n\t\t\tname={name} \n\t\t\tisPressed={name === filter}\n\t\t\tsetFilter={setFilter}\n\t\t\t/>\n\t})\n\n  return (\n    <div className=\"todoapp stack-large\">\n      <h1>Todo-List</h1>\n\n      <Form addTask={addTask} />\n\n      <div className=\"filters btn-group stack-exception\">\n        {filterList}\n      </div>\n      <h2 id=\"list-heading\">{headingText}</h2>\n      <ul\n        role=\"list\"\n        className=\"todo-list stack-large stack-exception\"\n        aria-labelledby=\"list-heading\">\n\t\t\t\t{taskList}\n      </ul>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}